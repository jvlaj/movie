# Generated by Django 4.2.1 on 2023-05-27 02:32

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Movie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Enter the movies title.", max_length=200
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Enter a brief description of the movies."
                    ),
                ),
                (
                    "release_date",
                    models.DateField(
                        help_text="Enter the year the movies was released."
                    ),
                ),
                (
                    "avg_rating",
                    models.IntegerField(
                        help_text="The average rating of the movies.",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "bio",
                    models.TextField(
                        help_text="Enter a brief description of the actor."
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(help_text="Enter the year the actor was born."),
                ),
                (
                    "movies",
                    models.ManyToManyField(
                        help_text="The movies the actor has acted in.",
                        to="movieWebsite.movie",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(max_length=200)),
                ("password", models.CharField(max_length=200)),
                (
                    "email",
                    models.EmailField(
                        max_length=254,
                        validators=[django.core.validators.EmailValidator()],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Actor",
            fields=[
                (
                    "person_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="movieWebsite.person",
                    ),
                ),
            ],
            bases=("movieWebsite.person",),
        ),
        migrations.CreateModel(
            name="Director",
            fields=[
                (
                    "person_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="movieWebsite.person",
                    ),
                ),
            ],
            bases=("movieWebsite.person",),
        ),
        migrations.CreateModel(
            name="Writer",
            fields=[
                (
                    "person_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="movieWebsite.person",
                    ),
                ),
            ],
            bases=("movieWebsite.person",),
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score",
                    models.IntegerField(
                        help_text="The user's rating of this movies.",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "review",
                    models.TextField(
                        help_text="Enter a brief description of the review."
                    ),
                ),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="movieWebsite.movie",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="The user that will be associated with the model instance",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to="movieWebsite.user",
                        verbose_name="user",
                    ),
                ),
            ],
        ),
    ]
